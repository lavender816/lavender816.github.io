{
    "version": "https://jsonfeed.org/version/1",
    "title": "lavender",
    "subtitle": "",
    "icon": "https://lavender816.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://lavender816.github.io",
    "items": [
        {
            "id": "https://lavender816.github.io/2021/07/08/opengl%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/",
            "url": "https://lavender816.github.io/2021/07/08/opengl%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/",
            "title": "OpenGL 导入模型",
            "date_published": "2021-07-08T14:32:18.034Z",
            "content_html": "<h1 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h1>\n<h2 id=\"学习网站\"><a class=\"anchor\" href=\"#学习网站\">#</a> 学习网站</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC1jbi5naXRodWIuaW8v\">LearnOpenGL CN:   </span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC1jbi5naXRodWIuaW8v\">https://learnopengl-cn.github.io/</span></p>\n</blockquote>\n<h2 id=\"依赖开源项目\"><a class=\"anchor\" href=\"#依赖开源项目\">#</a> 依赖开源项目</h2>\n<blockquote>\n<ol>\n<li>&lt;big&gt;Assimp:   &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Fzc2ltcC9hc3NpbXA=\">https://github.com/assimp/assimp</span>  (注：这个需要编译，后续会说，直接下载源文件不管用)</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2Fzc2ltcC5vcmcvaW5kZXgucGhwL2Rvd25sb2Fkcw==\">下载 Assimp:    </span><span class=\"exturl\" data-url=\"aHR0cDovL2Fzc2ltcC5vcmcvaW5kZXgucGhwL2Rvd25sb2Fkcw==\">http://assimp.org/index.php/downloads</span></p>\n<ol start=\"2\">\n<li>&lt;big&gt;GLFW:    &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dsZncvZ2xmdw==\">https://github.com/glfw/glfw</span>  (注：这个因为需要 lib 文件，所以需要官网下载相应的库文件等)</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2xmdy5vcmcvZG93bmxvYWQuaHRtbA==\">下载 GLFW:    </span><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2xmdy5vcmcvZG93bmxvYWQuaHRtbA==\">https://www.glfw.org/download.html</span></p>\n<ol start=\"3\">\n<li>\n<p>&lt;big&gt;GLM:    &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ctdHJ1Yy9nbG0=\">https://github.com/g-truc/glm</span></p>\n</li>\n<li>\n<p>&lt;big&gt;STB:   &lt;/big&gt; <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vdGhpbmdzL3N0Yg==\">https://github.com/nothings/stb</span>   (注：其实只用到一个关键文件 <code>stb_image.h</code> ，直接手动添加头文件也可)</p>\n</li>\n<li>\n<p>&lt;big&gt;GLAD 下载:    &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nbGFkLmRhdjFkLmRlLw==\">https://glad.dav1d.de/</span></p>\n</li>\n</ol>\n</blockquote>\n<h2 id=\"ide\"><a class=\"anchor\" href=\"#ide\">#</a> IDE</h2>\n<blockquote>\n<p><strong>&lt;big&gt;Visual Studio 16 2019 (VS 2019)&lt;/big&gt;</strong></p>\n<p>(注：一定要选定好统一的调试模式，例如 Debug 模式 /x64，后续的 Assimp 编译模式也要与此统一：Debug 模式 /x64，以及 GLFW 的相应文件下载也是 x64 的)</p>\n<p>另外，本人习惯：所有后续的 include 文件 (.h 包含目录)、lib 文件 (.lib 库目录) 都是使用的 VS 2019 默认的目录，应该是 <code>Microsoft Visual Studio（VS2019安装目录）\\2019\\Community\\VC\\Tools\\MSVC\\14.28.29910</code>  里面的 <code>include</code>  文件夹和 <code>lib</code>  文件夹，查看方法：打开菜单 -&gt; 项目 -&gt;（项目）属性 -&gt;VC ++ 目录 -&gt; 包含目录 -&gt; 编辑，在下方计算的值即可看到目录位置；也可以自定义相应的目录，在上述位置中修改添加等。</p>\n</blockquote>\n<h2 id=\"软件\"><a class=\"anchor\" href=\"#软件\">#</a> 软件</h2>\n<blockquote>\n<p>&lt;big&gt;Cmake:     &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbWFrZS5vcmcvZG93bmxvYWQv\">https://cmake.org/download/</span></p>\n<p>需要 cmake 对 assimp 进行编译</p>\n<p>当快捷键 <code>win</code> + <code>R</code>  输入 <code>cmd</code> ，输入 <code>cmake --help</code>  显示</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Usage</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  cmake <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>path-to-source<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  cmake <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>path-to-existing-build<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  cmake <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> -S <span class=\"token operator\">&lt;</span>path-to-source<span class=\"token operator\">></span> -B <span class=\"token operator\">&lt;</span>path-to-build<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Specify a <span class=\"token builtin class-name\">source</span> directory to <span class=\"token punctuation\">(</span>re-<span class=\"token punctuation\">)</span>generate a build system <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">it</span> <span class=\"token keyword\">in</span> the</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>current working directory.  Specify an existing build directory to</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>re-generate its build system.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                   · · · · · ·</pre></td></tr></table></figure><p>类似如上，即成功</p>\n</blockquote>\n<h1 id=\"正式开始\"><a class=\"anchor\" href=\"#正式开始\">#</a> 正式开始</h1>\n<h2 id=\"1-新建项目\"><a class=\"anchor\" href=\"#1-新建项目\">#</a> 1、新建项目</h2>\n<p>打开 VS 2019，新建一个普通的控制台项目即可；</p>\n<p>以下以 LearnOpenGL CN 上项目为例：</p>\n<p>打开<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9c3JjLzMubW9kZWxfbG9hZGluZy8xLm1vZGVsX2xvYWRpbmcvbW9kZWxfbG9hZGluZy5jcHA=\"> https://learnopengl.com/code_viewer_gh.php?code=src/3.model_loading/1.model_loading/model_loading.cpp</span></p>\n<p>将源码复制到对应工程的源文件中，此时会有很多报错，不要急，因为缺少相应的头文件等</p>\n<h2 id=\"2-配置导入头文件重要\"><a class=\"anchor\" href=\"#2-配置导入头文件重要\">#</a> 2、配置导入头文件（重要）</h2>\n<h3 id=\"1-glad\"><a class=\"anchor\" href=\"#1-glad\">#</a> (1) GLAD</h3>\n<p>打开网站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nbGFkLmRhdjFkLmRlLw==\">https://glad.dav1d.de/</span>，在 API 里选择对应的 opengl 版本下载即可，本项目以 opengl 版本为 4.1 为例，最后点击下方的 <code>Generate</code>  下载；</p>\n<p>下载 <code>glad.zip</code> ，解压后找到 <code>glad/src</code>  下的 <code>glad.c</code> ，添加到项目 -&gt; 源文件中，找到 <code>glad/include/glad</code>  文件夹，将其复制到 VS 2019 对应的包含目录中（开头已经说明）。</p>\n<h3 id=\"2-glfw\"><a class=\"anchor\" href=\"#2-glfw\">#</a> (2) GLFW</h3>\n<p>打开网站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2xmdy5vcmcvZG93bmxvYWQuaHRtbA==\">https://www.glfw.org/download.html</span>，我是 Windows 平台，64 位，所以点击 <code>64-bit Windows binaries</code>  下载，解压后打开 <code>lib-vc2019</code> ，将里面的 lib 文件复制到 VS 2019 对应的库目录 x64 文件夹中；</p>\n<p>接下来，打开菜单 -&gt; 项目 -&gt; 属性，找见链接器 -&gt; 输入 -&gt; 附加依赖项 -&gt; 编辑，输入 <code>glfw3.lib</code> ，确定；</p>\n<p>下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dsZncvZ2xmdy90cmVlL21hc3Rlci9pbmNsdWRl\"> https://github.com/glfw/glfw/tree/master/include</span> 里的 GLFW 文件夹，解压后复制 GLFW 文件夹至 VS 2019 对应的包含目录中。</p>\n<h3 id=\"3-glm\"><a class=\"anchor\" href=\"#3-glm\">#</a> (3) GLM</h3>\n<p>下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ctdHJ1Yy9nbG0=\"> https://github.com/g-truc/glm</span>，复制里面的 glm 文件夹至 VS 2019 对应的包含目录中即可。</p>\n<h3 id=\"4-learnopengl头文件问题\"><a class=\"anchor\" href=\"#4-learnopengl头文件问题\">#</a> (4) LearnOpenGL 头文件问题</h3>\n<p>打开<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9c3JjLzMubW9kZWxfbG9hZGluZy8xLm1vZGVsX2xvYWRpbmcvbW9kZWxfbG9hZGluZy5jcHA=\"> https://learnopengl.com/code_viewer_gh.php?code=src/3.model_loading/1.model_loading/model_loading.cpp</span></p>\n<p>鼠标移动至 <code>#include &lt;learnopengl/shader_m.h&gt;</code>  中，点击，即可跳转至 shader_m.h 文件，在项目中头文件右键，添加新建项，命名为 shader_m.h，复制代码至文件中；</p>\n<p>后续的 <code>camera.h</code>  和 <code>model.h</code>  添加方法相同，都是新建头文件，复制代码进去；对用网站地址：</p>\n<p>&lt;big&gt;shader_m.h:     &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9aW5jbHVkZXMvbGVhcm5vcGVuZ2wvc2hhZGVyLmg=\">https://learnopengl.com/code_viewer_gh.php?code=includes/learnopengl/shader.h</span></p>\n<p>&lt;big&gt;camera.h:     &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9aW5jbHVkZXMvbGVhcm5vcGVuZ2wvY2FtZXJhLmg=\">https://learnopengl.com/code_viewer_gh.php?code=includes/learnopengl/camera.h</span></p>\n<p>&lt;big&gt;model.h:     &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9aW5jbHVkZXMvbGVhcm5vcGVuZ2wvbW9kZWwuaA==\">https://learnopengl.com/code_viewer_gh.php?code=includes/learnopengl/model.h</span></p>\n<p>然后，将头文件由（例） <code>#include &lt;learnopengl/shader_m.h&gt;</code>  改成 <code>#include &quot;shader_m.h&quot;</code> ，后面的 camera.h 和 model.h 相同</p>\n<h3 id=\"5-modelh头文件问题\"><a class=\"anchor\" href=\"#5-modelh头文件问题\">#</a> (5) model.h 头文件问题</h3>\n<p>此时 shader_m.h 文件和 camera.h 文件都没有错误，但 model.h 文件还需要配置一些头文件，包括 stb_image.h 文件、assimp 库、mesh.h 和 shader.h，下面先说明 mesh.h 和 shader.h</p>\n<p>和 (4) 一样，都是新建头文件，复制对应的代码进去；对用网站地址：</p>\n<p>&lt;big&gt;mesh.h:     &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9aW5jbHVkZXMvbGVhcm5vcGVuZ2wvbWVzaC5o\">https://learnopengl.com/code_viewer_gh.php?code=includes/learnopengl/mesh.h</span></p>\n<p>&lt;big&gt;shader.h:     &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9aW5jbHVkZXMvbGVhcm5vcGVuZ2wvc2hhZGVyLmg=\">https://learnopengl.com/code_viewer_gh.php?code=includes/learnopengl/shader.h</span></p>\n<p>然后，将头文件由（例） <code>#include &lt;learnopengl/mesh.h&gt;</code>  改成 <code>#include &quot;mesh.h&quot;</code> ，后面的 shader.h 相同</p>\n<p>注：mesh.h 中也引入了 shader.h，也需要改一下</p>\n<h3 id=\"6-stb_imageh头文件问题\"><a class=\"anchor\" href=\"#6-stb_imageh头文件问题\">#</a> (6) stb_image.h 头文件问题</h3>\n<p>项目头文件新建.h 文件命名为 stb_image.h</p>\n<p>LearnOpenGL 网站地址如下：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC1jbi5naXRodWIuaW8vMDElMjBHZXR0aW5nJTIwc3RhcnRlZC8wNiUyMFRleHR1cmVzLyNzdGJfaW1hZ2Vo\">https://learnopengl-cn.github.io/01 Getting started/06 Textures/#stb_imageh</span>，可作为了解参考</p>\n<p>代码地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vdGhpbmdzL3N0Yi9ibG9iL21hc3Rlci9zdGJfaW1hZ2UuaA==\">https://github.com/nothings/stb/blob/master/stb_image.h</span>，复制代码至新建的头文件中，即可，头文件改成 <code>#include &quot;stb_image.h&quot;</code></p>\n<p>** 重要⭐⭐⭐：** 这时直接引用会报错，代码 stb_image.h 里有如下说明：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Do <span class=\"token keyword\">this</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">STB_IMAGE_IMPLEMENTATION</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>before you include <span class=\"token keyword\">this</span> file in <span class=\"token operator\">*</span>one<span class=\"token operator\">*</span> C <span class=\"token operator\">or</span> C<span class=\"token operator\">++</span> file to create the implementation<span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>因此，要在 <code>#include &quot;stb_image.h&quot;</code>  引用前加一行，如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">STB_IMAGE_IMPLEMENTATION</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"stb_image.h\"</span></span></pre></td></tr></table></figure><h3 id=\"7-assimp库核心\"><a class=\"anchor\" href=\"#7-assimp库核心\">#</a> (7) assimp 库（核心）</h3>\n<p>&lt;big&gt; 下载 Assimp:    &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cDovL2Fzc2ltcC5vcmcvaW5kZXgucGhwL2Rvd25sb2Fkcw==\">http://assimp.org/index.php/downloads</span>，选择 <code>Get the sourcecode</code>  或者直接访问<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Fzc2ltcC9hc3NpbXAvcmVsZWFzZXMvdGFnL3Y1LjAuMQ==\"> https://github.com/assimp/assimp/releases/tag/v5.0.1</span> 下载 <code>Source code (zip)</code>  （以这个 5.0.1 版本为例）</p>\n<p>解压 assimp-5.0.1，新建文件夹 build，按住 <code>Shift</code>  键，右键，选择 <code>在此处打开Powershell窗口</code> ，输入以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cmake <span class=\"token punctuation\">..</span> -G <span class=\"token string\">\"Visual Studio 16 2019\"</span></pre></td></tr></table></figure><p>回车键，如图生成以下文件即成功：</p>\n<p><img data-src=\"https://i.loli.net/2021/04/10/B6Ix9CtgN1Xuoqd.png\" alt=\"image-20210410225638071\" /></p>\n<p>打开.sln（Solution 文件）, 注意编译环境是 Debug /x64，选择 ALL_BUILD，生成</p>\n<p><img data-src=\"https://i.loli.net/2021/04/10/cAkrC6LjBVqfJGl.png\" alt=\"image-20210410234255092\" /></p>\n<p>等待生成成功，输出窗口出现以下即为成功：</p>\n<p><img data-src=\"https://i.loli.net/2021/04/10/G9LPNR7FwMStHkI.png\" alt=\"image-20210410230354912\" /></p>\n<p>复制 <code>assimp-5.0.1\\build\\include\\assimp</code>  文件夹下的 <code>config.h</code>  到 <code>assimp-5.0.1\\include\\assimp</code>  文件夹里</p>\n<p>复制下载的 <code>assimp-5.0.1\\include</code>  文件夹里的 <code>assimp</code>  文件夹至 VS 2019 对应的包含目录中。</p>\n<p>复制 <code>assimp-5.0.1\\build\\code\\Debug</code>  里的除.dll 文件到 VS 2019 对应的库目录 x64 文件夹中。</p>\n<p>注意：此时运行可能会出现如下问题：</p>\n<p><img data-src=\"https://i.loli.net/2021/04/10/E4MxHKu5cRDkL3s.png\" alt=\"image-20210410231413293\" /></p>\n<p>解决方法：</p>\n<p>将 <code>assimp-5.0.1\\build\\code\\Debug</code>  里的 <code>assimp-vc142-mtd.dll</code>  复制到 <code>项目文件夹/x64/Debug</code>  文件夹下</p>\n<p>，或者复制到系统的 <code>C:/Windows/System32</code>  文件夹下（因为是 x64 下）</p>\n<p>接下来，打开菜单 -&gt; 项目 -&gt; 属性，找见链接器 -&gt; 输入 -&gt; 附加依赖项 -&gt; 编辑，输入 <code>assimp-vc142-mtd.dll</code> ，确定；</p>\n<h3 id=\"8-模型问题\"><a class=\"anchor\" href=\"#8-模型问题\">#</a> (8) 模型问题</h3>\n<p>打开主函数文件，大概在 80 行代码处有以下代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// build and compile shaders</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// -------------------------</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Shader <span class=\"token function\">ourShader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.model_loading.vs\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1.model_loading.fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// load models</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// -----------</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Model <span class=\"token function\">ourModel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileSystem</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resources/objects/backpack/backpack.obj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中 <code>1.model_loading.vs</code>  和  <code>1.model_loading.fs</code>  都是 shader 文件， <code>backpack.obj</code>  是 OBJ 格式的模型文件</p>\n<p>接下来，先搞定 shader 文件，分别在项目源文件新建文件，分别命名为 <code>1.model_loading.vs</code>  和  <code>1.model_loading.fs</code> ，</p>\n<p>访问网站，粘贴代码，网站和代码如下：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9c3JjLzMubW9kZWxfbG9hZGluZy8xLm1vZGVsX2xvYWRpbmcvMS5tb2RlbF9sb2FkaW5nLnZz\">1.model_loading.vs</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">version</span> <span class=\"token expression\"><span class=\"token number\">330</span> core</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">layout</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> in vec3 aPos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">layout</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> in vec3 aNormal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">layout</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> in vec2 aTexCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>out vec2 TexCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>uniform mat4 model<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>uniform mat4 view<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>uniform mat4 projection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    TexCoords <span class=\"token operator\">=</span> aTexCoords<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gl_Position <span class=\"token operator\">=</span> projection <span class=\"token operator\">*</span> view <span class=\"token operator\">*</span> model <span class=\"token operator\">*</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>aPos<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC5jb20vY29kZV92aWV3ZXJfZ2gucGhwP2NvZGU9c3JjLzMubW9kZWxfbG9hZGluZy8xLm1vZGVsX2xvYWRpbmcvMS5tb2RlbF9sb2FkaW5nLmZz\">1.model_loading.fs</span></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">version</span> <span class=\"token expression\"><span class=\"token number\">330</span> core</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>out vec4 FragColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>in vec2 TexCoords<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>uniform sampler2D texture_diffuse1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    FragColor <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>texture_diffuse1<span class=\"token punctuation\">,</span> TexCoords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来搞定 obj 模型文件，按照 <code>resources/objects/backpack/backpack.obj</code>  新建文件夹也可，自己定义路径也可，我放在与.sln 同一级文件夹下新建的 resources/objects/backpack 目录下，即 <code>../resources/objects/backpack/</code></p>\n<p>下载模型 &lt;big&gt;nanosuit.rar:    &lt;/big&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC1jbi5naXRodWIuaW8vZGF0YS9uYW5vc3VpdC5yYXI=\">https://learnopengl-cn.github.io/data/nanosuit.rar</span></p>\n<p>然后解压，复制所以文件至 <code>../resources/objects/backpack/</code>  下，对于我这种代码改成</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// load models</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// -----------</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Model <span class=\"token function\">ourModel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileSystem</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../resources/objects/backpack/nanosuit.obj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>最后，上方代码会报错，是关于 FileSystem 相关的，改成如下就正确了</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// build and compile shaders</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// -------------------------</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Shader <span class=\"token function\">ourShader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.model_loading.vs\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1.model_loading.fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// load models</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// -----------</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Model <span class=\"token function\">ourModel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../resources/objects/backpack/nanosuit.obj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"最终成果\"><a class=\"anchor\" href=\"#最终成果\">#</a> 最终成果</h1>\n<p>运行如下：</p>\n<p><img data-src=\"https://i.loli.net/2021/04/10/9zuG3gcvnDB8TKe.png\" alt=\"image-20210410233446712\" /></p>\n<p><strong>成功！</strong></p>\n",
            "tags": []
        },
        {
            "id": "https://lavender816.github.io/2021/07/08/github%E7%9B%B8%E5%85%B3/",
            "url": "https://lavender816.github.io/2021/07/08/github%E7%9B%B8%E5%85%B3/",
            "title": "Github提速/下载",
            "date_published": "2021-07-08T14:32:18.031Z",
            "content_html": "<h1 id=\"一-提升github访问速度\"><a class=\"anchor\" href=\"#一-提升github访问速度\">#</a> 一、提升 Github 访问速度</h1>\n<h2 id=\"1-github镜像网站访问\"><a class=\"anchor\" href=\"#1-github镜像网站访问\">#</a> 1、Github 镜像网站访问</h2>\n<blockquote>\n<p>1、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLmNucG1qcy5vcmcv\">https://github.com.cnpmjs.org/</span></p>\n<p>2、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQuc2R1dC5tZS8=\">https://git.sdut.me/</span></p>\n<p>3、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZmFzdGdpdC5vcmc=\">https://hub.fastgit.org</span></p>\n</blockquote>\n<h2 id=\"2-修改hosts文件加速访问\"><a class=\"anchor\" href=\"#2-修改hosts文件加速访问\">#</a> 2、 修改 Hosts 文件加速访问</h2>\n<h3 id=\"1获取github的globalsslfastly\"><a class=\"anchor\" href=\"#1获取github的globalsslfastly\">#</a> (1) 获取 github 的 global.ssl.fastly</h3>\n<blockquote>\n<p>访问<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYXN0bHkubmV0LmlwYWRkcmVzcy5jb20vZ2l0aHViLmdsb2JhbC5zc2wuZmFzdGx5Lm5ldCNpcGluZm8=\"> https://fastly.net.ipaddress.com/github.global.ssl.fastly.net#ipinfo</span></p>\n</blockquote>\n<p><img data-src=\"https://z3.ax1x.com/2021/04/02/ceyWpd.png\" alt=\"\" /></p>\n<p>获得 IP 为 <code>199.232.69.194</code></p>\n<h3 id=\"2-获取githubcom地址\"><a class=\"anchor\" href=\"#2-获取githubcom地址\">#</a> (2) 获取 github.com 地址</h3>\n<blockquote>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLmlwYWRkcmVzcy5jb20vI2lwaW5mbw==\">https://github.com.ipaddress.com/#ipinfo</span></p>\n</blockquote>\n<p><img data-src=\"https://z3.ax1x.com/2021/04/02/cecPqP.png\" alt=\"\" /></p>\n<p>获得 IP 为 <code>140.82.112.4</code></p>\n<h3 id=\"3修改hosts文件\"><a class=\"anchor\" href=\"#3修改hosts文件\">#</a> (3) 修改 Hosts 文件</h3>\n<blockquote>\n<p>Hosts 文件位置： <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code></p>\n<p>右键属性，修改 Users 可写入</p>\n<p>如下图</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/04/02/cehhes.png\" alt=\"\" /></p>\n<p>打开方式，选择记事本，输入以下</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>199.232.69.194 github.global.ssl.fastly.net</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>140.82.112.4 github.com</pre></td></tr></table></figure><p>以上两个 IP 地址都是刚才两个网页获得，不同电脑 IP 可能不同</p>\n<p>最后 <code>Win</code> + <code>R</code> ，打开运行，输入 <code>cmd</code> ，进入命令提示符，输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ipconfig /flushdns</pre></td></tr></table></figure><p>刷新 DNS 缓存，最后应该能正常访问</p>\n</blockquote>\n<h2 id=\"3-github520包含图片加载问题\"><a class=\"anchor\" href=\"#3-github520包含图片加载问题\">#</a> 3、Github520 (包含图片加载问题)</h2>\n<blockquote>\n<p>Github 大佬的加速 github 和解决图片加载问题的项目</p>\n<p>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzUyMXh1ZXdlaWhhbi9HaXRIdWI1MjA=\">https://github.com/521xueweihan/GitHub520</span></p>\n<p>（emmm，能解决访问慢的问题，如果访问不了 github，emmm，这个方法不适用于您）</p>\n<p>使用方法都在 Github 上完整给出</p>\n</blockquote>\n<h1 id=\"二-提高github下载速度\"><a class=\"anchor\" href=\"#二-提高github下载速度\">#</a> 二、提高 Github 下载速度</h1>\n<h2 id=\"1-代理网站加速\"><a class=\"anchor\" href=\"#1-代理网站加速\">#</a> 1、 代理网站加速</h2>\n<blockquote>\n<p>1、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naHByb3h5LmNvbS8=\">https://ghproxy.com/</span></p>\n<p>2、<span class=\"exturl\" data-url=\"aHR0cDovL2doLmFwaS45OTk4ODg2Ni54eXov\">http://gh.api.99988866.xyz/</span></p>\n<p>3、<span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2x3YS5jb20vZ2l0aHViLw==\">http://toolwa.com/github/</span></p>\n<p>4、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuemhsaDYuY24v\">https://github.zhlh6.cn/</span>   （使用 <code>git clone</code>  方式下载）</p>\n<p>5、Github raw 加速：将  <code>raw.githubusercontent.com</code>  替换成 <code>raw.staticdn.net</code></p>\n<p>6、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaHJpbGwtcG9uZC0zZTgxLmh1bnNoLndvcmtlcnMuZGV2Lw==\">https://shrill-pond-3e81.hunsh.workers.dev/</span></p>\n<p>7、<span class=\"exturl\" data-url=\"aHR0cDovL2dpdGQuY2Mv\">http://gitd.cc/</span></p>\n<p>8、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRjbG9uZS5jb20v\">https://gitclone.com/</span>（部分需要会员，效果显著）</p>\n<p>9、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZC56d2MzNjUuY29tLw==\">https://pd.zwc365.com/</span></p>\n<p>10、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kLnNlcmN0bC5jb20v\">https://d.serctl.com/</span></p>\n<p>11、<span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2wubWtibG9nLmNuL2Rvd25naXQvIy9ob21l\">http://tool.mkblog.cn/downgit/#/home</span></p>\n</blockquote>\n<h2 id=\"2-油猴插件配置脚本适用于基于-chromium-的浏览器\"><a class=\"anchor\" href=\"#2-油猴插件配置脚本适用于基于-chromium-的浏览器\">#</a> 2、油猴插件配置脚本 (适用于基于 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hyb21pdW0ub3JnLw==\">Chromium</span> 的浏览器)</h2>\n<h3 id=\"安装油猴插件支持chrome-microsoft-edge-360浏览器等\"><a class=\"anchor\" href=\"#安装油猴插件支持chrome-microsoft-edge-360浏览器等\">#</a> 安装油猴插件（支持 Chrome、Microsoft Edge、360 浏览器等）</h3>\n<h3 id=\"1-脚本一github-accelerator\"><a class=\"anchor\" href=\"#1-脚本一github-accelerator\">#</a> ① <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2phZGV6aS9naXRodWItYWNjZWxlcmF0b3Iv\">脚本一：github-accelerator</span></h3>\n<h3 id=\"2-脚本二github-增强-高速下载\"><a class=\"anchor\" href=\"#2-脚本二github-增强-高速下载\">#</a> ② <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQxMjI0NQ==\">脚本二：Github 增强 - 高速下载</span></h3>\n<h2 id=\"3-插件加速适用于基于-chromium-的浏览器\"><a class=\"anchor\" href=\"#3-插件加速适用于基于-chromium-的浏览器\">#</a> 3 插件加速 (适用于基于 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hyb21pdW0ub3JnLw==\">Chromium</span> 的浏览器)</h2>\n<blockquote>\n<p>插件名称：Github 加速</p>\n<p>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvZ2l0aHViJUU1JThBJUEwJUU5JTgwJTlGL21mbmtmbGlkam5sYWRua2xkZm9ubmFpY2xqcHBhaHBnL3JlbGF0ZWQ/aGw9emgtQ04=\">Github 加速</span></p>\n<p>插件 ID：mfnkflidjnladnkldfonnaicljppahpg</p>\n<blockquote>\n<p>(正常渠道方法：需要科学上网，不过既然能科学上网了，不就直接访问 Gihub 了吗？这个插件应该适用于只能通过谷歌访问助手下载插件的朋友)</p>\n</blockquote>\n<blockquote>\n<p>Chrome Extension 第三方下载：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUucGljdHVyZWtub3cuY29tLw==\">1、收藏猫插件下载</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUtZXh0ZW5zaW9uLWRvd25sb2FkZXIuY29tLw==\">2、chrome-extension-downloader: 根据插件 ID 下载 crx 文件</span></p>\n</blockquote>\n</blockquote>\n<h2 id=\"4-gitee转入下载\"><a class=\"anchor\" href=\"#4-gitee转入下载\">#</a> 4 Gitee 转入下载</h2>\n<blockquote>\n<p>1、申请一个 gitee 账户</p>\n<p>2、右上角 “+” 号 —&gt; 从 Github/GitLab 导入</p>\n<p>3、导入成功后即可进行下载等各项操作</p>\n</blockquote>\n<h2 id=\"5-idm下载\"><a class=\"anchor\" href=\"#5-idm下载\">#</a> 5、IDM 下载</h2>\n<blockquote>\n<p>其实就是利用 Internet Download Manager 的多线程下载的优势达到加速下载的目的</p>\n</blockquote>\n<h2 id=\"6-哔\"><a class=\"anchor\" href=\"#6-哔\">#</a> 6、哔 ——————</h2>\n<blockquote>\n<p>代理、梯子（科学上网）YOU  KNOW</p>\n</blockquote>\n",
            "tags": [
                "github",
                "github下载",
                "github",
                "提速"
            ]
        },
        {
            "id": "https://lavender816.github.io/2021/07/08/hello-world/",
            "url": "https://lavender816.github.io/2021/07/08/hello-world/",
            "title": "Hello World",
            "date_published": "2021-07-08T13:26:56.240Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}